@using EventSystem.ViewModels.EventViewModel;

@model InviteViewModel

<div>
    <label for="invite-section-dropdown"><strong>Select Section:</strong></label>
    <select id="invite-section-dropdown" class="form-control">
        <option value="pending">Pending Invites</option>
        <option value="answered">Answered Invites</option>
        <option value="sent">Sent Invites</option>
    </select>

    <!-- Sections -->
    <div id="pending-invites" class="invite-section">
        <h2>Pending Invites</h2>
        @{
            ViewData["InviteSection"] = "Pending"; 
        }
        <partial name="_InviteList" model="Model.PendingInvites" />
    </div>
    <div id="answered-invites" class="invite-section" style="display:none;">
        <h2>Answered Invites</h2>
        @{
            ViewData["InviteSection"] = "Answered"; 
        }
        <partial name="_InviteList" model="Model.AnsweredInvites" />
    </div>
    <div id="sent-invites" class="invite-section" style="display:none;">
        <h2>Sent Invites</h2>
        @{
            ViewData["InviteSection"] = "Sent"; 
        }
        <partial name="_InviteList" model="Model.SentInvites" />
    </div>
</div>

<script>
    document.getElementById('invite-section-dropdown').addEventListener('change', function () {
        const selectedSection = this.value;

        // Hide all sections
        document.querySelectorAll('.invite-section').forEach(section => {
            section.style.display = 'none';
        });

        // Show the selected section
        document.getElementById(`${selectedSection}-invites`).style.display = 'block';
    });
</script>

<style>
    .badge {
        display: inline-block;
        padding: 0.5em 1em;
        font-size: 0.9em;
        font-weight: 600;
        border-radius: 0.5em;
    }

    .bg-success {
        background-color: #28a745;
    }

    .bg-danger {
        background-color: #dc3545;
    }

    .bg-warning {
        background-color: #ffc107;
        color: #212529;
    }
</style>